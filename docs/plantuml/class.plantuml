@startuml class

object App#lightgreen
object IMLib#lightgreen
abstract class RCKitModule {}
rectangle "UI 相关"#lightgrey {
  object "<rc-xxx-component>" as Components
  ' object Vue#lightgreen
  object ViewModel
  class VueProvider
  class ViewModelService
  note right
  多个 Provider 共享数据时，可将数据抽离到 Service 中，
  以便于复用，Provider 内部维护独有 ViewModel 数据
  end note

  class XProvider
  class YProvider
  XProvider --|> VueProvider
  YProvider --|> VueProvider
  ViewModelService --o XProvider
  ViewModelService --o YProvider
  ViewModelService .up.> ViewModel

  object i18n
  note left: 多语言模块
}

abstract class RCKitProvider {
  - ctx: RCKitContext
  + abstract build(): extends HTMLElement
}

class RCKitApplication {
  -- Cfgs --
  + defineCustomElement()
  + defineCustomService()
  + setCommandSwitch()
  + registerCustomElements()
  -- Events --
  + addEventListener(type: Symbol, listener: (evt: RCKitEvent) => void, _this: any): void
  + onceEventListener(type: Symbol, listener: (evt: RCKitEvent) => void, _this: any): void
  + removeEventListener(type: Symbol, listener: (evt: RCKitEvent) => void, _this: any): void
  + removeEventListeners(type: Symbol): void
  + removeAllEventListeners(): void
  + dispatchEvent(evt: RCKitEvent): void
}

class RCKitStore {
  -- Getter --
  + getCurrentUser(): User
  -- Setter --
  + setCurrentUser(user: User): void
}
class RCKitContext {
  -- Getter --
  + getStore(): RCKitStore
  + getLogger(): ILogger
  -- Events --
  + addEventListener(type: Symbol, listener: (evt: RCKitEvent) => void, _this: any): void
  + onceEventListener(type: Symbol, listener: (evt: RCKitEvent) => void, _this: any): void
  + removeEventListener(type: Symbol, listener: (evt: RCKitEvent) => void, _this: any): void
  + removeEventListeners(type: Symbol): void
  + removeAllEventListeners(): void
  + dispatchEvent(evt: RCKitEvent): void
  -- IMLib Proxy --
  + sendMessage(msg: Message): Promise<any>
}

ViewModel <.. XProvider: 修改数据
Components <.. ViewModel: 数据驱动 UI
' Vue --o XProvider
' Components o-- Vue
VueProvider --|> RCKitProvider
App o-- RCKitApplication
RCKitApplication o-- RCKitContext
RCKitProvider o-- RCKitContext
RCKitContext o-- IMLib
RCKitContext o- RCKitModule
RCKitStore -o RCKitContext

@enduml